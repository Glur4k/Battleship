/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import java.util.Enumeration;

import javax.swing.ButtonGroup;
import javax.swing.JRadioButton;

import controller.Controller;

/**
 *
 * @author Sandro
 */
public class SetBattleshipDialog extends javax.swing.JDialog {

	private final int ONE = 1;
	private final int TWO = 2;
	private int ship;
	private Controller controller;
    /**
     * Creates new form Dialog
     */
    public SetBattleshipDialog(java.awt.Frame parent, boolean modal, int x) {
        super(parent, modal);
        this.ship = x;
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        JLship = new javax.swing.JLabel();
        JTFxPos = new javax.swing.JLabel();
        JTFyPos = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        JRBhorizontal = new javax.swing.JRadioButton();
        JRBvertical = new javax.swing.JRadioButton();
        jButton1 = new javax.swing.JButton();

        setLocationRelativeTo(null);

        JLship.setText("Bitte schiff X setzen!");
        JTFxPos.setText("X-Position");
        JTFyPos.setText("Y-Position");

        buttonGroup1.add(JRBhorizontal);
        JRBhorizontal.setSelected(true);
        JRBhorizontal.setText("Horizontal");

        buttonGroup1.add(JRBvertical);
        JRBvertical.setText("Vertikal");
        String s = "Bitte das Ruderboot setzen!";

        if (ship == ONE) {
        	s = "Bitte den Zerstörer setzen!";
        } else if (ship == TWO) {
        	s = "Bitte den Flugzeugträger setzen!";
        }
        JLship.setText(s);

        jButton1.setText("OK");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(33, 33, 33)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(JTFxPos)
                                    .addComponent(JTFyPos)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(53, 53, 53)
                                .addComponent(JRBhorizontal)))
                        .addGap(38, 38, 38)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(JRBvertical))
                            .addComponent(jTextField1, javax.swing.GroupLayout.DEFAULT_SIZE, 114, Short.MAX_VALUE)
                            .addComponent(jTextField2)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(118, 118, 118)
                        .addComponent(jButton1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(92, 92, 92)
                        .addComponent(JLship)))
                .addContainerGap(23, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(JLship)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(JTFxPos)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(JTFyPos)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(JRBhorizontal)
                    .addComponent(JRBvertical))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1)
                .addContainerGap(22, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>                        

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {                                         
    	String s, t;
    	boolean alignment = false;
    	s = JTFxPos.getText();
    	t = JTFyPos.getText();
    	if (getSelectedRadio(buttonGroup1) == JRBvertical) {
    		alignment = true;
    	}
    	if (s == null || t == null) {
    		BattleshipGUIUtils.noInputerror();
    	} else if (controller.checkSetShipPosition(alignment) != 0) {
    		// Error
    	} else {
    		if (ship == ONE) {
    			controller.setHumanDestructor(Integer.parseInt(s), Integer.parseInt(t), alignment);
    		} else if (ship == TWO) {
    			controller.setHumanFlattop(Integer.parseInt(s), Integer.parseInt(t), alignment);
    		} else {
    			controller.setHumanRowboat(Integer.parseInt(s), Integer.parseInt(t));
    		}
    	}
    }
    
    private static JRadioButton getSelectedRadio(ButtonGroup group) {
        for (Enumeration eRadio=group.getElements(); eRadio.hasMoreElements(); ) {
            //Iterating over the Radio Buttons
            JRadioButton radioButton = (JRadioButton)eRadio.nextElement();
            //Comparing radioButtons model with groups selection
            if (radioButton.getModel() == group.getSelection()) {
                return radioButton;
            }
        }
        return null;
    }
    
    // Variables declaration - do not modify                     
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel JLship;
    private javax.swing.JLabel JTFxPos;
    private javax.swing.JLabel JTFyPos;
    private javax.swing.JRadioButton JRBhorizontal;
    private javax.swing.JRadioButton JRBvertical;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    // End of variables declaration                   
}
